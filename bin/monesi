#!/usr/bin/env ruby

require 'thor'

require './lib/monesi/mastodon_client'
require './lib/monesi/feed_manager'
require './lib/monesi/command_parser'
require './lib/monesi/version'

class CLI < Thor
  include Monesi

  class_option :directory
  class_option :status_file_path, default: 'status.yaml'

  desc 'setup', 'setup .env for connecting mastodon server'

  def setup
    Dir::chdir(options[:directory]) if options[:directory]
    MastodonClient.setup
  end

  desc 'post_message MESSAGE', 'post a message for testing'

  def post_message(msg)
    mastodon_client.post_message(msg)
  end

  desc 'console', 'interactive session on terminal'

  def console
    Dir::chdir(options[:directory]) if options[:directory]
    mastodon_client.console(feed_manager)
  end

  desc 'bot', 'start bot for mastodon'

  option :s3_bucket_name
  def bot
    Dir::chdir(options[:directory]) if options[:directory]
    mastodon_client.bot(feed_manager)
  end

  desc 'echo_server', 'echo server for debugging mastodon interface'

  def echo_server
    mastodon_client.echo_server
  end

  private
  def mastodon_client
    @mastodon_client ||= MastodonClient.new
  end

  def feed_manager
    unless @feed_manager
      @feed_manager = FeedManager.new(options.merge(s3_bucket_name: ENV['S3_BUCKET'], path: options[:status_file_path]))
    end
    @feed_manager
  end
end

CLI.start(ARGV)
